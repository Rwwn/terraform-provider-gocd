---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "gocd Provider"
subcategory: ""
description: |-
  
---

# GoCD Provider
A provider to interact with continuous delivery server [GoCD](https://www.gocd.org/).
This helps to GET/CREATE/UPDATE various resources in GoCD server with the helm of GoCD [api](https://api.gocd.org/current/).
You must configure the provider with the proper credentials before you can use it.

## Example Usage
```terraform
terraform {
    required_providers {
        gocd = {
            source  = "hashicorp/gocd"
            version = "~> 0.0.1"
        }
    }
}

// Configure GoCD Provider
provider "gocd" {
    base_url   = "http://localhost:8153/go"
    username   = "admin"
    auth_token = "d8fccbc997d04e917b1490af8e7bf46290ab8c99"
    skip_check = true
    retries {
      count     = 10
      wait_time = 2
    }
}

// Create cluster profiles in GoCD
resource "gocd_cluster_profile" "kube_cluster_profile" {
    profile_id = "kube_cluster_profile"
    plugin_id  = "cd.go.contrib.elasticagent.kubernetes"
    properties {
        key   = "go_server_url"
        value = "https://gocd.sample.com/go"
    }
    properties {
        key   = "auto_register_timeout"
        value = "15"
    }
}
```

## Authentication in GoCD provider
GoCD credentials can be passed to provider as both terraform variables and environment variables.

It supports both basic auth using `password` and bearer token based auth using `auth_token`.
### Environment variable:
- `GOCD_BASE_URL`
- `GOCD_CAFILE_CONTENT`
- `GOCD_USERNAME`
- `GOCD_PASSWORD`
- `GOCD_AUTH_TOKEN`

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `username` (String) username to be used while connecting with GoCD

### Optional

- `auth_token` (String) bearer-token to be used while connecting with GoCD (API: https://api.gocd.org/current/#access-tokens, UI: https://docs.gocd.org/current/configuration/access_tokens.html) cannot co-exist with password based auth.
- `base_url` (String) base url of GoCD server, with which this terraform provider will connect with (https://gocd.myself.com/go)
- `ca_file` (String) CA file contents, to be used while connecting to GoCD server when CA based auth is enabled
- `loglevel` (String) loglevel to be set for the api calls made to GoCD
- `password` (String) password to be used while connecting with GoCD
- `retries` (Block Set) Retry configs to be set for the API calls made forG GoCD server. (see [below for nested schema](#nestedblock--retries))
- `skip_check` (Boolean) setting this to false will skip a validation done during client creation, this helps by avoiding errors being thrown from all resource/data block defined

<a id="nestedblock--retries"></a>
### Nested Schema for `retries`

Optional:

- `count` (Number) Number of times to retry in case of API failures.
- `wait_time` (Number) Time interval to wait between subsequent calls
